{"ast":null,"code":"import { Contact } from './models/contacts';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"./services/contact.service\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"./components/edit-contact/edit-contact.component\";\nfunction AppComponent_tr_19_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r3 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"tr\")(1, \"td\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"td\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"td\");\n    i0.ɵɵtext(6);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"td\");\n    i0.ɵɵtext(8);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(9, \"td\")(10, \"button\", 3);\n    i0.ɵɵlistener(\"click\", function AppComponent_tr_19_Template_button_click_10_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r3);\n      const contact_r1 = restoredCtx.$implicit;\n      const ctx_r2 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r2.editContact(contact_r1));\n    });\n    i0.ɵɵtext(11, \"Edit\");\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const contact_r1 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(contact_r1.firstName);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(contact_r1.lastName);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(contact_r1.email);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(contact_r1.phoneNumber);\n  }\n}\nexport class AppComponent {\n  //@Input()contact!: Contact;\n  constructor(contactService) {\n    this.contactService = contactService;\n    this.title = 'contact-app';\n    this.contacts = [];\n  }\n  initNewContact() {\n    this.contactToEdit = new Contact();\n  }\n  editContact(contact) {\n    this.contactToEdit = contact;\n  }\n  updateContactList(contacts) {\n    this.contacts = contacts;\n  }\n  ngOnInit() {\n    this.contactService.getContacts().subscribe(result => this.contacts = result);\n  }\n}\nAppComponent.ɵfac = function AppComponent_Factory(t) {\n  return new (t || AppComponent)(i0.ɵɵdirectiveInject(i1.ContactService));\n};\nAppComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: AppComponent,\n  selectors: [[\"app-root\"]],\n  decls: 20,\n  vars: 2,\n  consts: [[1, \"container-fluid\"], [1, \"row\"], [1, \"col\"], [1, \"btn\", \"btn-primary\", 3, \"click\"], [1, \"center-block\", 3, \"contact\", \"contactUpdated\"], [1, \"table\"], [\"scope\", \"col\"], [4, \"ngFor\", \"ngForOf\"]],\n  template: function AppComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"div\", 2)(3, \"button\", 3);\n      i0.ɵɵlistener(\"click\", function AppComponent_Template_button_click_3_listener() {\n        return ctx.initNewContact();\n      });\n      i0.ɵɵtext(4, \"Create New Contact\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(5, \"app-edit-contact\", 4);\n      i0.ɵɵlistener(\"contactUpdated\", function AppComponent_Template_app_edit_contact_contactUpdated_5_listener($event) {\n        return ctx.updateContactList($event);\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(6, \"div\", 2)(7, \"table\", 5)(8, \"thead\")(9, \"tr\")(10, \"th\", 6);\n      i0.ɵɵtext(11, \"First Name\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(12, \"th\", 6);\n      i0.ɵɵtext(13, \"Last Name\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(14, \"th\", 6);\n      i0.ɵɵtext(15, \"Email\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(16, \"th\", 6);\n      i0.ɵɵtext(17, \"Phone Number\");\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(18, \"tbody\");\n      i0.ɵɵtemplate(19, AppComponent_tr_19_Template, 12, 4, \"tr\", 7);\n      i0.ɵɵelementEnd()()()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"contact\", ctx.contactToEdit);\n      i0.ɵɵadvance(14);\n      i0.ɵɵproperty(\"ngForOf\", ctx.contacts);\n    }\n  },\n  dependencies: [i2.NgForOf, i3.EditContactComponent],\n  styles: [\".app-edit-contact[_ngcontent-%COMP%] {\\n  padding-left: 50px;\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvYXBwLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0ksa0JBQUE7QUFDSiIsInNvdXJjZXNDb250ZW50IjpbIi5hcHAtZWRpdC1jb250YWN0IHtcclxuICAgIHBhZGRpbmctbGVmdDo1MHB4O1xyXG59Il0sInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":"AACA,SAASA,OAAO,QAAQ,mBAAmB;;;;;;;;ICgBjCC,0BAAqC;IAC/BA,YAAqB;IAAAA,iBAAK;IAC9BA,0BAAI;IAAAA,YAAoB;IAAAA,iBAAK;IAC7BA,0BAAI;IAAAA,YAAiB;IAAAA,iBAAK;IAC1BA,0BAAI;IAAAA,YAAuB;IAAAA,iBAAK;IAChCA,0BAAI;IAA+BA;MAAA;MAAA;MAAA;MAAA,OAASA,6CAAoB;IAAA,EAAC;IAACA,qBAAI;IAAAA,iBAAS;;;;IAJ3EA,eAAqB;IAArBA,0CAAqB;IACrBA,eAAoB;IAApBA,yCAAoB;IACpBA,eAAiB;IAAjBA,sCAAiB;IACjBA,eAAuB;IAAvBA,4CAAuB;;;ADZvC,OAAM,MAAOC,YAAY;EAIvB;EAEAC,YAAoBC,cAA8B;IAA9B,mBAAc,GAAdA,cAAc;IALlC,UAAK,GAAG,aAAa;IAErB,aAAQ,GAAc,EAAE;EAG6B;EAErDC,cAAc;IACZ,IAAI,CAACC,aAAa,GAAG,IAAIN,OAAO,EAAE;EACpC;EAEAO,WAAW,CAACC,OAAgB;IAC1B,IAAI,CAACF,aAAa,GAAGE,OAAO;EAC9B;EAEAC,iBAAiB,CAACC,QAAmB;IACnC,IAAI,CAACA,QAAQ,GAAGA,QAAQ;EAC1B;EAEAC,QAAQ;IACN,IAAI,CAACP,cAAc,CAACQ,WAAW,EAAE,CAACC,SAAS,CAAEC,MAAiB,IAAM,IAAI,CAACJ,QAAQ,GAAGI,MAAO,CAAC;EAC9F;;AAtBWZ,YAAY;mBAAZA,YAAY;AAAA;AAAZA,YAAY;QAAZA,YAAY;EAAAa;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MCTzBlB,8BAA6B;MAGSA;QAAA,OAASmB,oBAAgB;MAAA,EAAC;MAACnB,kCAAkB;MAAAA,iBAAS;MACtFA,2CAA8G;MAA7CA;QAAA,OAAkBmB,6BAAyB;MAAA,EAAC;MAACnB,iBAAmB;MAEnIA,8BAAiB;MAIOA,2BAAU;MAAAA,iBAAK;MAC/BA,8BAAgB;MAAAA,0BAAS;MAAAA,iBAAK;MAC9BA,8BAAgB;MAAAA,sBAAK;MAAAA,iBAAK;MAC1BA,8BAAgB;MAAAA,6BAAY;MAAAA,iBAAK;MAGrCA,8BAAO;MACLA,8DAMK;MACPA,iBAAQ;;;MApB6BA,eAAyB;MAAzBA,2CAAyB;MAapCA,gBAAW;MAAXA,sCAAW","names":["Contact","i0","AppComponent","constructor","contactService","initNewContact","contactToEdit","editContact","contact","updateContactList","contacts","ngOnInit","getContacts","subscribe","result","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["C:\\Users\\Daimeun\\AngularProjects\\contact-list\\contact-app\\src\\app\\app.component.ts","C:\\Users\\Daimeun\\AngularProjects\\contact-list\\contact-app\\src\\app\\app.component.html"],"sourcesContent":["import { Component } from '@angular/core';\nimport { Contact } from './models/contacts';\nimport { ContactService } from './services/contact.service';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'contact-app';\n  contactToEdit?: Contact;\n  contacts: Contact[] = [];\n  //@Input()contact!: Contact;\n  \n  constructor(private contactService: ContactService) {}\n\n  initNewContact() {\n    this.contactToEdit = new Contact();\n  }\n\n  editContact(contact: Contact) {\n    this.contactToEdit = contact;\n  }\n\n  updateContactList(contacts: Contact[]) {\n    this.contacts = contacts;\n  }\n\n  ngOnInit() : void {\n    this.contactService.getContacts().subscribe((result: Contact[]) => (this.contacts = result));\n  }\n}\n","<div class=\"container-fluid\">\n  <div class=\"row\">\n    <div class=\"col\">\n      <button class=\"btn btn-primary\" (click)=\"initNewContact()\">Create New Contact</button>\n      <app-edit-contact class=\"center-block\" [contact]=\"contactToEdit\" (contactUpdated)=\"updateContactList($event)\"></app-edit-contact>\n    </div>\n    <div class=\"col\">\n      <table class=\"table\">\n        <thead>\n          <tr>\n            <th scope=\"col\">First Name</th>\n            <th scope=\"col\">Last Name</th>\n            <th scope=\"col\">Email</th>\n            <th scope=\"col\">Phone Number</th>\n          </tr>\n        </thead>\n        <tbody>\n          <tr *ngFor=\"let contact of contacts\">\n            <td>{{contact.firstName}}</td>\n            <td>{{contact.lastName}}</td>\n            <td>{{contact.email}}</td>\n            <td>{{contact.phoneNumber}}</td>\n            <td><button class=\"btn btn-primary\"(click)=\"editContact(contact)\">Edit</button></td>\n          </tr>\n        </tbody>\n    </table>\n    </div>\n  </div>\n</div>\n\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}